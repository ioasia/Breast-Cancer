geom_point() +
scale_x_continuous(name = 'q-value CNA-mRNA (ANOVA)', expand = c(0,0))
ggplot(data = anovaQvalueCor, mapping = aes(x = -log10(qval), y = cor, colour = intClgene)) +
geom_point() +
scale_x_continuous(name = 'q-value CNA-mRNA (ANOVA)', expand = c(0,0)) +
scale_colour_manual(values = c('TRUE' =  'red', 'FALSE' = 'grey'))
ggplot(data = anovaQvalueCor, mapping = aes(x = -log10(qval), y = cor, colour = intClgene)) +
geom_point() +
scale_x_continuous(name = 'q-value CNA-mRNA (ANOVA)', expand = c(0,0)) +
scale_colour_manual(values = c('TRUE' =  'red', 'FALSE' = alpha('grey', 0.3))
ggplot(data = anovaQvalueCor, mapping = aes(x = -log10(qval), y = cor, colour = intClgene)) +
geom_point() +
scale_x_continuous(name = 'q-value CNA-mRNA (ANOVA)', expand = c(0,0)) +
scale_colour_manual(values = c('TRUE' =  'red', 'FALSE' = alpha('grey', 0.3)))
ggplot(data = anovaQvalueCor, mapping = aes(x = -log10(qval), y = cor, colour = intClgene)) +
geom_point() +
scale_x_continuous(name = 'q-value CNA-mRNA (ANOVA)', expand = c(0,0)) +
scale_colour_manual(values = c('TRUE' =  'red', 'FALSE' = alpha('grey', 0.3))) +
theme(legend.position = 'top')
ggplot(data = anovaQvalueCor, mapping = aes(x = -log10(qval), y = cor, colour = intClgene)) +
geom_point() +
scale_x_continuous(name = 'q-value CNA-mRNA (ANOVA)', expand = c(0,0)) +
scale_colour_manual(name = 'Curtis et al., Inclust classifier genes',
values = c('TRUE' =  'red', 'FALSE' = alpha('grey', 0.3))) +
theme(legend.position = 'top')
ggplot(data = anovaQvalueCor, mapping = aes(x = -log10(qval), y = cor, colour = intClgene)) +
geom_point() +
scale_x_continuous(name = 'q-value CNA-mRNA (ANOVA)', expand = c(0,0)) +
scale_colour_manual(name = '', labels = c("", "Curtis et al., Inclust classifier genes"),
values = c('TRUE' =  'red', 'FALSE' = alpha('grey', 0.3)))+
theme(legend.position = 'top') +
guides(colour = guide_legend(override.aes = list(fill = )))
ggplot(data = anovaQvalueCor, mapping = aes(x = -log10(qval), y = cor, colour = intClgene)) +
geom_point() +
scale_x_continuous(name = 'q-value CNA-mRNA (ANOVA)', expand = c(0,0)) +
scale_colour_manual(name = '', labels = c("", "Curtis et al., Inclust classifier genes"),
values = c('TRUE' =  'red', 'FALSE' = alpha('grey', 0.3)))+
theme(legend.position = 'top')
ggplot(data = anovaQvalueCor, mapping = aes(x = -log10(qval), y = cor, colour = intClgene)) +
geom_point() +
scale_x_continuous(name = 'q-value CNA-mRNA (ANOVA)', expand = c(0,0)) +
scale_colour_manual(name = '', labels = c("", "Curtis et al., Inclust classifier genes"),
values = c('TRUE' =  'red', 'FALSE' = alpha('grey', 0.3)))+
theme(legend.position = 'top') +
guides(colour = guide_legend(override.aes = list(colour = c(NA, 'red'))))
ggplot(data = anovaQvalueCor, mapping = aes(x = -log10(qval), y = cor, colour = intClgene)) +
geom_point() +
scale_x_continuous(name = 'q-value CNA-mRNA (ANOVA)', expand = c(0,0)) +
scale_y_continuous(name = 'mRNA - Protein correlation \nSpearman') +
scale_colour_manual(name = '', labels = c("", "Curtis et al., Inclust classifier genes"),
values = c('TRUE' =  'red', 'FALSE' = alpha('grey', 0.3)))+
theme(legend.position = 'top') +
guides(colour = guide_legend(override.aes = list(colour = c(NA, 'red'))))
ggplot(data = anovaQvalueCor, mapping = aes(x = -log10(qval), y = cor, colour = intClgene)) +
geom_point() +
scale_x_continuous(name = 'q-value CNA-mRNA (ANOVA)', expand = c(0,0)) +
scale_y_continuous(name = 'mRNA - Protein correlation \n(Spearman)') +
scale_colour_manual(name = '', labels = c("", "Curtis et al., Inclust classifier genes"),
values = c('TRUE' =  'red', 'FALSE' = alpha('grey', 0.3)))+
theme(legend.position = 'top') +
guides(colour = guide_legend(override.aes = list(colour = c(NA, 'red'))))
ggplot(data = anovaQvalueCor, mapping = aes(x = -log10(qval), y = cor, colour = intClgene)) +
geom_point() +
scale_x_continuous(name = 'q-value CNA-mRNA (ANOVA)', expand = c(0,0.2)) +
scale_y_continuous(name = 'mRNA - Protein correlation \n(Spearman)') +
scale_colour_manual(name = '', labels = c("", "Curtis et al., Inclust classifier genes"),
values = c('TRUE' =  'red', 'FALSE' = alpha('grey', 0.3)))+
theme(legend.position = 'top') +
guides(colour = guide_legend(override.aes = list(colour = c(NA, 'red'))))
ggplot(data = anovaQvalueCor, mapping = aes(x = -log10(qval), y = cor, colour = intClgene)) +
geom_point() +
scale_x_continuous(name = 'q-value CNA-mRNA (ANOVA)', expand = c(0.1,0)) +
scale_y_continuous(name = 'mRNA - Protein correlation \n(Spearman)') +
scale_colour_manual(name = '', labels = c("", "Curtis et al., Inclust classifier genes"),
values = c('TRUE' =  'red', 'FALSE' = alpha('grey', 0.3)))+
theme(legend.position = 'top') +
guides(colour = guide_legend(override.aes = list(colour = c(NA, 'red'))))
ggplot(data = anovaQvalueCor, mapping = aes(x = -log10(qval), y = cor, colour = intClgene)) +
geom_point() +
scale_x_continuous(name = 'q-value CNA-mRNA (ANOVA)', expand = c(0,0)) +
scale_y_continuous(name = 'mRNA - Protein correlation \n(Spearman)') +
scale_colour_manual(name = '', labels = c("", "Curtis et al., Inclust classifier genes"),
values = c('TRUE' =  'red', 'FALSE' = alpha('grey', 0.3)))+
theme(legend.position = 'top') +
guides(colour = guide_legend(override.aes = list(colour = c(NA, 'red'))))
ggplot(data = anovaQvalueCor, mapping = aes(x = -log10(qval), y = cor, colour = intClgene)) +
geom_point() +
scale_x_continuous(name = 'q-value CNA-mRNA (ANOVA)', expand = c(0,0), format = math_format()) +
scale_y_continuous(name = 'mRNA - Protein correlation \n(Spearman)') +
scale_colour_manual(name = '', labels = c("", "Curtis et al., Inclust classifier genes"),
values = c('TRUE' =  'red', 'FALSE' = alpha('grey', 0.3)))+
theme(legend.position = 'top') +
guides(colour = guide_legend(override.aes = list(colour = c(NA, 'red'))))
ggplot(data = anovaQvalueCor, mapping = aes(x = -log10(qval), y = cor, colour = intClgene)) +
geom_point() +
scale_x_continuous(name = 'q-value CNA-mRNA (ANOVA)', expand = c(0,0), label = math_format()) +
scale_y_continuous(name = 'mRNA - Protein correlation \n(Spearman)') +
scale_colour_manual(name = '', labels = c("", "Curtis et al., Inclust classifier genes"),
values = c('TRUE' =  'red', 'FALSE' = alpha('grey', 0.3)))+
theme(legend.position = 'top') +
guides(colour = guide_legend(override.aes = list(colour = c(NA, 'red'))))
ggplot(data = anovaQvalueCor, mapping = aes(x = -log10(qval), y = cor, colour = intClgene)) +
geom_point() +
scale_x_continuous(name = 'q-value CNA-mRNA (-log10)', expand = c(0,0)) +
scale_y_continuous(name = 'mRNA - Protein correlation \n(Spearman)') +
scale_colour_manual(name = '', labels = c("", "Curtis et al., Inclust classifier genes"),
values = c('TRUE' =  'red', 'FALSE' = alpha('grey', 0.3)))+
theme(legend.position = 'top') +
guides(colour = guide_legend(override.aes = list(colour = c(NA, 'red'))))
p <- ggplot(data = anovaQvalueCor, mapping = aes(x = -log10(qval), y = cor, colour = intClgene)) +
geom_point() +
scale_x_continuous(name = 'q-value CNA-mRNA (-log10)', expand = c(0,0)) +
scale_y_continuous(name = 'mRNA - Protein correlation \n(Spearman)', limits = c(-1, 1)) +
scale_colour_manual(name = '', labels = c("", "Curtis et al., Inclust classifier genes"),
values = c('TRUE' =  'red', 'FALSE' = alpha('grey', 0.3)))+
theme(legend.position = 'top') +
guides(colour = guide_legend(override.aes = list(colour = c(NA, 'red'))))
p <- ggplot(data = anovaQvalueCor, mapping = aes(x = -log10(qval), y = cor, colour = intClgene)) +
geom_point() +
scale_x_continuous(name = 'q-value CNA-mRNA (-log10)', expand = c(0,0)) +
scale_y_continuous(name = 'mRNA - Protein correlation \n(Spearman)', limits = c(-1, 1),
breaks = seq(-1,1,0,2)) +
scale_colour_manual(name = '', labels = c("", "Curtis et al., Inclust classifier genes"),
values = c('TRUE' =  'red', 'FALSE' = alpha('grey', 0.3)))+
theme(legend.position = 'top') +
guides(colour = guide_legend(override.aes = list(colour = c(NA, 'red'))))
p <- ggplot(data = anovaQvalueCor, mapping = aes(x = -log10(qval), y = cor, colour = intClgene)) +
geom_point() +
scale_x_continuous(name = 'q-value CNA-mRNA (-log10)', expand = c(0,0)) +
scale_y_continuous(name = 'mRNA - Protein correlation \n(Spearman)', limits = c(-1, 1),
breaks = seq(-1,1, 0.2)) +
scale_colour_manual(name = '', labels = c("", "Curtis et al., Inclust classifier genes"),
values = c('TRUE' =  'red', 'FALSE' = alpha('grey', 0.3)))+
theme(legend.position = 'top') +
guides(colour = guide_legend(override.aes = list(colour = c(NA, 'red'))))
p <- ggplot(data = anovaQvalueCor, mapping = aes(x = -log10(qval), y = cor, colour = intClgene)) +
geom_point() +
scale_x_continuous(name = 'q-value CNA-mRNA (-log10)', expand = c(0,0)) +
scale_y_continuous(name = 'mRNA - Protein correlation \n(Spearman)', limits = c(-1, 1),
breaks = seq(-1,1, 0.2)) +
scale_colour_manual(name = '', labels = c("", "Curtis et al., Inclust classifier genes"),
values = c('TRUE' =  'red', 'FALSE' = alpha('grey', 0.3)))+
theme(legend.position = 'top') +
guides(colour = guide_legend(override.aes = list(colour = c(NA, 'red'))))
seq(-1, 1, 0.2)
ggplot(data = anovaQvalueCor, mapping = aes(x = -log10(qval), y = cor, colour = intClgene)) +
geom_point() +
scale_x_continuous(name = 'q-value CNA-mRNA (-log10)', expand = c(0,0)) +
scale_y_continuous(name = 'mRNA - Protein correlation \n(Spearman)', limits = c(-1, 1),
breaks = seq(-1, 1, 0.2))
ggplot(data = anovaQvalueCor, mapping = aes(x = -log10(qval), y = cor, colour = intClgene)) +
geom_point() +
scale_x_continuous(name = 'q-value CNA-mRNA (-log10)', expand = c(0,0)) +
scale_y_continuous(name = 'mRNA - Protein correlation \n(Spearman)', limits = c(-1, 1),
breaks = seq(-1, 1, 0.2)) +
scale_colour_manual(name = '', labels = c("", "Curtis et al., Inclust classifier genes"),
values = c('TRUE' =  'red', 'FALSE' = alpha('grey', 0.3)))+
theme(legend.position = 'top') +
guides(colour = guide_legend(override.aes = list(colour = c(NA, 'red'))))
ggplot(data = anovaQvalueCor, mapping = aes(x = -log10(qval), y = cor, colour = intClgene)) +
geom_point() +
scale_x_continuous(name = 'q-value CNA-mRNA (-log10)', expand = c(0,0)) +
scale_y_continuous(name = 'mRNA - Protein correlation \n(Spearman)', limits = c(-1, 1),
breaks = seq(-1, 1, 0.5)) +
scale_colour_manual(name = '', labels = c("", "Curtis et al., Inclust classifier genes"),
values = c('TRUE' =  'red', 'FALSE' = alpha('grey', 0.3)))+
theme(legend.position = 'top') +
guides(colour = guide_legend(override.aes = list(colour = c(NA, 'red'))))
p <- ggplot(data = anovaQvalueCor, mapping = aes(x = -log10(qval), y = cor, colour = intClgene)) +
geom_point() +
scale_x_continuous(name = 'q-value CNA-mRNA (-log10)', expand = c(0,0), limits = c(0,6)) +
scale_y_continuous(name = 'mRNA - Protein correlation \n(Spearman)', limits = c(-1, 1),
breaks = seq(-1, 1, 0.5)) +
scale_colour_manual(name = '', labels = c("", "Curtis et al., Inclust classifier genes"),
values = c('TRUE' =  'red', 'FALSE' = alpha('grey', 0.3)))+
theme(legend.position = 'top') +
guides(colour = guide_legend(override.aes = list(colour = c(NA, 'red'))))
ggplot(data = anovaQvalueCor, mapping = aes(x = -log10(qval), y = cor, colour = intClgene)) +
geom_point() +
scale_x_continuous(name = 'q-value CNA-mRNA (-log10)', expand = c(0,0), limits = c(0,6)) +
scale_y_continuous(name = 'mRNA - Protein correlation \n(Spearman)', limits = c(-1, 1),
breaks = seq(-1, 1, 0.5)) +
scale_colour_manual(name = '', labels = c("", "Curtis et al., Inclust classifier genes"),
values = c('TRUE' =  'red', 'FALSE' = alpha('grey', 0.3)))+
theme(legend.position = 'top') +
guides(colour = guide_legend(override.aes = list(colour = c(NA, 'red'))))
toInstall=c("R6","stringi","reshape", "WGCNA","readxl",'rJava', 'xlsxjars',"xlsx","matrixStats","data.table", "beeswarm","dplyr", "plyr", "ggthemes", "perm",
"cowplot","ggrepel","tibble", "reshape2","ggplot2","doParallel","ggrepel", "lmPerm","DescTools",
'lsr',"coin","gsubfn","gridExtra","VennDiagram", 'gsubfn', 'venneuler', 'ggsignif', 'scales')
packages(toInstall)
libraries(c(toInstall,toInstallBio))
toInstallBio <- c("impute", "preprocessCore", "GO.db", "biomaRt","GenomicRanges","CGHregions")
libraries(c(toInstall,toInstallBio))
p <- ggplot(data = anovaQvalueCor, mapping = aes(x = -log10(qval), y = cor, colour = intClgene)) +
geom_point() +
scale_x_continuous(name = 'q-value CNA-mRNA (-log10)', expand = c(0,0), limits = c(0,6), labels = math_format()) +
scale_y_continuous(name = 'mRNA - Protein correlation \n(Spearman)', limits = c(-1, 1),
breaks = seq(-1, 1, 0.5)) +
scale_colour_manual(name = '', labels = c("", "Curtis et al., Inclust classifier genes"),
values = c('TRUE' =  'red', 'FALSE' = alpha('grey', 0.3)))+
theme(legend.position = 'top') +
guides(colour = guide_legend(override.aes = list(colour = c(NA, 'red'))))
ggplot(data = anovaQvalueCor, mapping = aes(x = -log10(qval), y = cor, colour = intClgene)) +
geom_point() +
scale_x_continuous(name = 'q-value CNA-mRNA (-log10)', expand = c(0,0), limits = c(0,6), labels = math_format()) +
scale_y_continuous(name = 'mRNA - Protein correlation \n(Spearman)', limits = c(-1, 1),
breaks = seq(-1, 1, 0.5)) +
scale_colour_manual(name = '', labels = c("", "Curtis et al., Inclust classifier genes"),
values = c('TRUE' =  'red', 'FALSE' = alpha('grey', 0.3)))+
theme(legend.position = 'top') +
guides(colour = guide_legend(override.aes = list(colour = c(NA, 'red'))))
ggplot(data = anovaQvalueCor, mapping = aes(x = -log10(qval), y = cor, colour = intClgene)) +
geom_point() +
scale_x_continuous(name = 'q-value CNA-mRNA (-log10)', expand = c(0,0), limits = c(0,6), labels = math_format()) +
scale_y_continuous(name = 'mRNA - Protein correlation \n(Spearman)', limits = c(-1, 1),
breaks = seq(-1, 1, 0.5)) +
scale_colour_manual(name = '', labels = c("", "Curtis et al., Inclust classifier genes"),
values = c('TRUE' =  'red', 'FALSE' = alpha('grey', 0.3)))+
theme(legend.position = 'top') +
guides(colour = guide_legend(override.aes = list(colour = c(NA, 'red'))))
make.summary.table <- function(data, molecular_view) {
anova_sig <- find.significant.genes(do.anova.init, "ANOVA", data, genes,"fdr")
anova_perm_sig <- find.significant.genes(do.anova.permutation, "ANOVA_Perm", data, genes, "fdr")
kruskal_sig <- find.significant.genes(do.kruskal.wall.test, "Kruskal", data, genes, "fdr")
wilcox_gains <- calculate.wilcox.pval.fc(data,cna_bin,"Gains", 1)
wilcox_losses <- calculate.wilcox.pval.fc(data,cna_bin,"Losses", -1)
wilcox <- cbind(wilcox_gains, wilcox_losses)
wilcox$genes <- rownames(wilcox)
pearson <- molecular.species.correlation(cna_log, data, 'pearson')
spearman <- molecular.species.correlation(cna_log, data, 'spearman')
cor_table <- merge(pearson,spearman, by=c("CNA","Gene"), all=TRUE)
cor_table <- cor_table[, -1]
colnames(cor_table) <- c("genes", "Pearson_correlation", "Pearson_pval", "Pearson_adj_pval",
"Spearman_correlation", "Spearman_pval", "Spearman_adj_pval")
res_all <- merge(merge(merge(merge(anova_sig, anova_perm_sig, by="genes"), kruskal_sig, by="genes"),wilcox,by="genes"),
cor_table, by="genes")
# res_all <- res_all[order(res_all$qval_ANOVA),]
rownames(res_all) = NULL
colnames(res_all) <- c( "genes" , paste(molecular_view, colnames(res_all)[-1], sep="_"))
return(res_all)
}
generate.final.table <- function(level) {
dat_mRNA <- manhat.matrix(data1 = omicsType1, data2 = omicsType2, molecular_view="mRNA", level)
dat_Protein <- manhat.matrix(data1 = omicsType1, data2 = omicsType2, molecular_view="Protein", level)
id <- colnames(dat_mRNA) %in% c("pvalTest","FoldChange","Effect_Size","pvalAdjusted", "foldChangeSignificant",
"pvalAdjustedSignificant","pvalueFoldChangeSignificant", "score")
colnames(dat_mRNA)[id] <- paste("mRNA",colnames(dat_mRNA)[id],sep="_")
colnames(dat_Protein)[id] <- paste("Protein",colnames(dat_Protein)[id],sep="_")
dat_all <- merge(dat_mRNA, dat_Protein, by=colnames(dat_mRNA)[!id])
colnames(dat_all)[-c(1:6)] <- paste(colnames(dat_all)[-c(1:6)], levelName, sep="_")
colnames(dat_all)[1] = "genes"
return(dat_all)
# write.xlsx(dat_all, "dat_all.xlsx", row.names = FALSE, col.names = TRUE)
}
data_all <- lapply(c(1,-1), function(i) {
levelName <- ifelse(level==1, "Gains", ifelse(level==-1,"Losses","Amplifications"))
generate.final.table(level = i)})
omicsType1 <- mrna
omicsType2 <- prot
binary_CNA <- cna_bin
data_all <- lapply(c(1,-1), function(i) {
levelName <- ifelse(level==1, "Gains", ifelse(level==-1,"Losses","Amplifications"))
generate.final.table(level = i)})
dim(cna_tot)
unique(cna_tot)
unique(as.numeric(cna_tot))
noPloidies <- unique(as.numeric(cna_tot))
noPloidies
getExpressionValuesForPloidies <- function(i) {
idx <- which(cna_tot == i)
as.numeric(dat)[idx]
}
getExpressionValuesForPloidies <- function(ploidy, data) {
idx <- which(cna_tot == i)
as.numeric(data)[idx]
}
getExportedValue(1,mrna)
ploidy = 1
data()
data
data = mrna
which(cna_tot == i)
idx <- which(cna_tot == i)
as.numeric(data)
as.numeric(data)[idx]
getExpressionValuesForPloidies <- function(ploidy, data) {
idx <- which(cna_tot == i)
as.numeric(data)[idx]
}
getExportedValue(1, mrna)
getExpressionValuesForPloidies <- function(ploidy, data) {
idx <- which(cna_tot == i)
return(as.numeric(data)[idx])
}
getExportedValue(1, mrna)
getExpressionValuesForPloidies <- function(ploidy, data) {
idx <- which(cna_tot == ploidy)
return(as.numeric(data)[idx])
}
getExportedValue(1, mrna)
getExpressionValuesForPloidies <- function(ploidy, data) {
idx <- which(cna_tot == ploidy)
return(as.numeric(data)[idx])
}
getExportedValue(1, mrna)
ploidy = 1
data = mrna
idx <- which(cna_tot == ploidy)
as.numeric(data)[idx]
getExpressionValuesForPloidies <- function(ploidy, data) {
idx <- which(cna_tot == ploidy)
return(as.numeric(data)[idx])
}
getExpressionValuesForPloidies(1, mrna)
dat <- list("CNA" = cna_log,
"mRNA" = mrna,
"Protein" = prot)
a <- lapply(dat, function(i) {
lapply(noPloidies, function(j) {
getExpressionValuesForPloidies(j, i)
})
})
a <- do.call(a, cbind)
a <- do.call(cbind, a)
View(a)
a <- lapply(dat, function(i) {
lapply(noPloidies, function(j) {
getExpressionValuesForPloidies(j, i)
})
})
str(a)
b <- unlist(a, recursive = FALSE)
a <- melt(cna_tot)
View(a)
meltedCNATot <- melt(cna_tot)
View(meltedCNATot)
a <-  lapply(list(cna_tot, cna_log, mrna, prot), melt)
a[[1]]
a[[1]][,1]
a[[1]][,2]
all(a[[1]][,2] == a[[2]][,2])
all(a[[1]][,1] == a[[2]][,1])
meltedData <-  lapply(list(cna_tot, cna_log, mrna, prot), melt)
meltedData <- do.call(cbind, meltedData)
head(meltedData)
meltedData <-  lapply(list(cna_tot, cna_log, mrna, prot), function(i) {
res <- melt(i)
res <- res$value
})
meltedData <- do.call(cbind, meltedData)
View(meltedData)
meltedData <-  lapply(list('Ploidy' = cna_tot, 'CNA' = cna_log, 'mRNA' = mrna, 'Protein' = prot), function(i) {
res <- melt(i)
res <- res$value
})
meltedData <- do.call(cbind, meltedData)
View(meltedData)
melt(meltedData, id.vars = 'Ploidy')
View(meltedData)
meltedData <- melt(meltedData, id.vars = 'Ploidy')
View(meltedData)
meltedData <-  lapply(list('Ploidy' = cna_tot, 'CNA' = cna_log, 'mRNA' = mrna, 'Protein' = prot), function(i) {
res <- melt(i)
res <- res$value
})
meltedData <- melt(meltedData, id.vars = 'Ploidy')
View(meltedData)
meltedData <-  lapply(list('Ploidy' = cna_tot, 'CNA' = cna_log, 'mRNA' = mrna, 'Protein' = prot), function(i) {
res <- melt(i)
res <- res$value
})
meltedData <- do.call(cbind, meltedData)
View(meltedData)
meltedData <-  lapply(list('Ploidy' = cna_tot, 'CNA' = cna_log, 'mRNA' = mrna, 'Protein' = prot), function(i) {
res <- melt(i)
res <- res$value
})
meltedData <- as.data.frame(do.call(cbind, meltedData))
View(meltedData)
meltedData <- melt(meltedData, id.vars = 'Ploidy')
View(meltedData)
ggplot(data = meltedData, mapping = aes(x = Ploidy, y = value, fill = variable)) +
geom_boxplot()
ggplot(data = meltedData, mapping = aes(x = Ploidy, y = value, fill = variable)) +
geom_boxplot(position = 'identity')
ggplot(data = meltedData, mapping = aes(x = Ploidy, y = value, fill = variable)) +
geom_bar(position = 'identity')
ggplot(data = meltedData, mapping = aes(x = Ploidy, y = value, fill = variable)) +
geom_bar()
ggplot(data = meltedData, mapping = aes(x = Ploidy, y = value, fill = variable)) +
geom_bar(stat = 'identity')
ggplot(data = meltedData, mapping = aes(x = Ploidy, y = value, fill = variable)) +
geom_boxplot(stat = 'identity', position = 'identity')
ggplot(data = meltedData, mapping = aes(x = Ploidy, y = value, fill = variable)) +
geom_bar(stat = 'identity', position = 'identity')
ggplot(data = meltedData, mapping = aes(x = Ploidy, y = value, fill = variable)) +
geom_boxplot(stat = 'identity', position = 'identity')
ggplot(data = meltedData, mapping = aes(x = Ploidy, y = value, fill = variable)) +
geom_boxplot()
as.factor(meltedData$Ploidy)
meltedData$Ploidy <- as.factor(meltedData$Ploidy)
ggplot(data = meltedData, mapping = aes(x = Ploidy, y = value, fill = variable)) +
geom_boxplot()
ggplot(data = meltedData, mapping = aes(x = Ploidy, y = value, fill = variable)) +
geom_boxplot(outlier.shape = NA) +
scale_y_continuous()
ggplot(data = meltedData, mapping = aes(x = Ploidy, y = value, fill = variable)) +
geom_boxplot(outlier.shape = NA) +
scale_y_continuous(limits = c(-4,5))
ggplot(data = meltedData, mapping = aes(x = Ploidy, y = value, fill = variable)) +
geom_boxplot(outlier.shape = NA) +
scale_y_continuous(name = 'log2 values', limits = c(-4,5)) +
scale_fill_manual(names = '')
ggplot(data = meltedData, mapping = aes(x = Ploidy, y = value, fill = variable)) +
geom_boxplot(outlier.shape = NA) +
scale_y_continuous(name = 'log2 values', limits = c(-4,5)) +
scale_fill_manual(name = '')
ggplot(data = meltedData, mapping = aes(x = Ploidy, y = value, fill = variable)) +
geom_boxplot(outlier.shape = NA) +
scale_y_continuous(name = 'log2 values', limits = c(-4,5)) +
guides(fill = guide_legend(title = ''))
ggplot(data = meltedData, mapping = aes(x = Ploidy, y = value, fill = variable)) +
geom_boxplot(outlier.shape = NA) +
scale_y_continuous(name = 'log2 values', limits = c(-4,5)) +
guides(fill = guide_legend(title = '')) +
theme(text = element_text(size = 15))
dat_all_Gains <- data_all[[1]]
dat_all_Losses <- data_all[[2]]
common_cols <- intersect(colnames(dat_all_Gains), colnames(dat_all_Losses))
dat_all <- merge(dat_all_Gains, dat_all_Losses, by = common_cols)
res_all_mrna <- make.summary.table(omicsType1, "mRNA")
res_all_prot <- make.summary.table(omicsType2, "Protein")
res_all <- merge(res_all_mrna, res_all_prot, by = "genes")
colsToRemove <- grepl("Gains", colnames(res_all)) | grepl("Losses", colnames(res_all))
res_all <- res_all[,!colsToRemove]
final_table <- merge(dat_all,res_all,by="genes")
View(final_table)
dat_all <- merge(dat_all_Gains, dat_all_Losses, by = common_cols)
common_cols <- intersect(colnames(dat_all_Gains), colnames(dat_all_Losses))
dat_all <- merge(dat_all_Gains, dat_all_Losses, by = common_cols)
common_cols <- intersect(colnames(dat_all_Gains), colnames(dat_all_Losses))
View(dat_all_Gains)
View(dat_all_Losses)
dat_all_Gains <- data_all[[1]]
View(dat_all_Gains)
dat_all_Losses <- data_all[[2]]
View(dat_all_Losses)
level
levelName
data_all <- lapply(c(1,-1), function(i) {
levelName <- ifelse(i==1, "Gains", ifelse(level==-1,"Losses","Amplifications"))
generate.final.table(level = i)})
dat_all_Gains <- data_all[[1]]
dat_all_Losses <- data_all[[2]]
View(dat_all_Gains)
View(dat_all_Losses)
level
levelName
data_all <- lapply(c(1,-1), function(i) {
levelName <- ifelse(i==1, "Gains", ifelse(i==-1,"Losses","Amplifications"))
generate.final.table(level = i)})
dat_all_Gains <- data_all[[1]]
dat_all_Losses <- data_all[[2]]
View(dat_all_Gains)
View(dat_all_Losses)
View(dat_all_Gains)
cis.cor <- function(gene, data) {
cor = corAndPvalue(cna_log[gene, ], data[gene, ], method = "pearson")
return(c(cor$cor, cor$p))
}
cis_mrna <- sapply(genes, cis.cor, data = mrna)
rownames(cis_mrna) <- c("cor", "pvalue")
cis_prot <- sapply(genes, cis.cor, data = prot)
rownames(cis_prot) <-  c("cor", "pvalue")
attenuate <- cis_mrna["cor", ] - cis_prot["cor",]
install.packages("mclust")
mixture_gaussian <- Mclust(attenuate)
library(mclust)
mixture_gaussian <- Mclust(attenuate)
mixture_gaussian$classification==2
names(attenuate)[mixture_gaussian$classification==2]
cis_mrna
figureData <- data.frame('mRNA' = cis_mrna, 'Protein' = cis_prot, group = mixture_gaussian$classification)
mixture_gaussian$classification
cis_mrna
View(cis_mrna)
figureData <- data.frame('mRNA' = cis_mrna[1,], 'Protein' = cis_prot[1,], 'group' = mixture_gaussian$classification)
View(figureData)
ggplot(data = figureData, mapping = aes(x = mRNA, y= Protein, colour = group)) +
geom_point()
mixture_gaussian <- Mclust(attenuate, G = 2)
figureData <- data.frame('mRNA' = cis_mrna[1,], 'Protein' = cis_prot[1,], 'group' = mixture_gaussian$classification)
ggplot(data = figureData, mapping = aes(x = mRNA, y= Protein, colour = group)) +
geom_point()
figureData <- data.frame('mRNA' = cis_mrna[1,], 'Protein' = cis_prot[1,], 'group' = as.factor(mixture_gaussian$classification))
ggplot(data = figureData, mapping = aes(x = mRNA, y= Protein, colour = group)) +
geom_point()
mixture_gaussian$z
mixture_gaussian$call
mixture_gaussian$n
mixture_gaussian$d
mixture_gaussian$G
mixture_gaussian$parameters
hist(attenuate)
ggplot(data = figureData, mapping = aes(x = mRNA, y= Protein, colour = group)) +
geom_point()
plot(density(figureData$mRNA[figureData$group == 1]))
plot(density(figureData$mRNA[figureData$group == 2]))
plot(density(figureData$mRNA[figureData$group == 1]))
plot(density(figureData$mRNA[figureData$group == 2]))
plot(density(figureData$mRNA[figureData$group == 2]))
plot(density(figureData$mRNA[figureData$group == 1]))
